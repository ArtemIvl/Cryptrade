version: '3.4'

networks:
  backend:

services:
  userdb:
    container_name: userdb
    image: mysql:8.2.0-oracle
    environment:
      - MYSQL_ROOT_PASSWORD=096-9503012
    networks:
      - backend
    ports:
      - 8002:3306

  portfoliodb:
    container_name: portfoliodb
    image: mysql:8.2.0-oracle
    environment:
      - MYSQL_ROOT_PASSWORD=096-9503012
    networks:
      - backend
    ports:
      - 8003:3306

  cryptodatacache:
    container_name: cryptodatacache
    image: mysql:8.2.0-oracle
    environment:
      - MYSQL_ROOT_PASSWORD=096-9503012
    networks:
      - backend
    ports:
      - 8004:3306

  usermanagement:
    container_name: user-management
    image: ${DOCKER_REGISTRY-}usermanagement
    build:
      context: .
      dockerfile: UserManagement/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=userdb
      - DB_NAME=userdb
      - DB_ROOT_PASSWORD=096-9503012

  portfoliomanagement:
    container_name: portfolio-management
    image: ${DOCKER_REGISTRY-}portfoliomanagement
    build:
      context: .
      dockerfile: PortfolioManagement/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=portfoliodb
      - DB_NAME=portfoliodb
      - DB_ROOT_PASSWORD=096-9503012

  cryptocurrencydata:
    container_name: cryptocurrency-data
    image: ${DOCKER_REGISTRY-}cryptocurrencydata
    build:
      context: .
      dockerfile: CryptocurrencyData/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=cryptodatacache
      - DB_NAME=cryptodatacache
      - DB_ROOT_PASSWORD=096-9503012

  apigateway:
    container_name: api-gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    networks:
      - backend
    ports:
      - 8001:80

  jwtauthenticationmanager:
    container_name: auth-manager
    image: ${DOCKER_REGISTRY-}jwtauthenticationmanager
    build:
      context: .
      dockerfile: JwtAuthenticationManager/Dockerfile
    networks:
      - backend
