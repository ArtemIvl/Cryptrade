´M
]/Users/artemivliev/Artem/Cryptrade/CryptradeBack/UserManagement/Controllers/UserController.cs
	namespace		 	
UserManagement		
 
.		 
Controllers		 $
{

 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
UserController 
:  !
ControllerBase" 0
{ 
private 
readonly 
UserService $
_userService% 1
;1 2
private 
readonly 
JwtTokenHandler (
_jwtTokenHandler) 9
;9 :
public 
UserController 
( 
UserService )
userService* 5
,5 6
JwtTokenHandler7 F
jwtTokenHandlerG V
)V W
{ 	
_userService 
= 
userService &
;& '
_jwtTokenHandler 
= 
jwtTokenHandler .
;. /
} 	
[ 	
HttpPost	 
( 
$str 
) 
] 
public 
IActionResult 
Register %
(% &
[& '
FromBody' /
]/ 0
UserRegisterModel1 B
modelC H
)H I
{ 	
try 
{ 
_userService 
. 
RegisterUser )
() *
model* /
)/ 0
;0 1
return 
Ok 
( 
$str 3
)3 4
;4 5
} 
catch   
(   
	Exception   
ex   
)    
{!! 
return"" 

BadRequest"" !
(""! "
$"""" $
$str""$ 9
{""9 :
ex"": <
.""< =
Message""= D
}""D E
"""E F
)""F G
;""G H
}## 
}$$ 	
[&& 	
HttpPost&&	 
(&& 
$str&& 
)&& 
]&& 
public'' 
async'' 
Task'' 
<'' 
ActionResult'' &
<''& '"
AuthenticationResponse''' =
?''= >
>''> ?
>''? @

LoginAsync''A K
(''K L
[''L M
FromBody''M U
]''U V!
AuthenticationRequest''W l
request''m t
)''t u
{(( 	
var)) 
userData)) 
=)) 
await))  
_userService))! -
.))- .
GetAllUsersAsync)). >
())> ?
)))? @
;))@ A
List++ 
<++ $
JwtAuthenticationManager++ )
.++) *
Entity++* 0
.++0 1
User++1 5
>++5 6
userDataConverted++7 H
=++I J
userData++K S
.++S T
Select++T Z
(++Z [
user++[ _
=>++` b
new,, $
JwtAuthenticationManager,, ,
.,,, -
Entity,,- 3
.,,3 4
User,,4 8
{-- 
id.. 
=.. 
user.. !
...! "
id.." $
,..$ %
name// 
=// 
user// #
.//# $
name//$ (
,//( )
email00 
=00 
user00  $
.00$ %
email00% *
,00* +
password11  
=11! "
user11# '
.11' (
password11( 0
,110 1
role22 
=22 
user22 #
.22# $
role22$ (
}33 
)33 
.33 
ToList33 
(33 
)33 
;33  
var55 
response55 
=55 
_jwtTokenHandler55 +
.55+ ,
GenerateJwtToken55, <
(55< =
request55= D
,55D E
userDataConverted55F W
)55W X
;55X Y
if66 
(66 
response66 
==66 
null66  
)66  !
return66" (
Unauthorized66) 5
(665 6
)666 7
;667 8
return77 
Ok77 
(77 
response77 
)77 
;77  
}88 	
[:: 	
HttpGet::	 
(:: 
$str:: 
):: 
]:: 
public;; 
async;; 
Task;; 
<;; 
IActionResult;; '
>;;' (
GetAllUsers;;) 4
(;;4 5
);;5 6
{<< 	
try== 
{>> 
var?? 
userData?? 
=?? 
await?? $
_userService??% 1
.??1 2
GetAllUsersAsync??2 B
(??B C
)??C D
;??D E
return@@ 
Ok@@ 
(@@ 
userData@@ "
)@@" #
;@@# $
}AA 
catchBB 
(BB 
	ExceptionBB 
exBB 
)BB  
{CC 
returnDD 

BadRequestDD !
(DD! "
$"DD" $
$strDD$ 9
{DD9 :
exDD: <
.DD< =
MessageDD= D
}DDD E
"DDE F
)DDF G
;DDG H
}EE 
}FF 	
[HH 	
HttpGetHH	 
]HH 
[II 	
	AuthorizeII	 
]II 
publicJJ 
IActionResultJJ 
GetUserDataJJ (
(JJ( )
)JJ) *
{KK 	
tryLL 
{MM 
varOO 
userIdOO 
=OO 
UserOO !
.OO! "
	FindFirstOO" +
(OO+ ,

ClaimTypesOO, 6
.OO6 7
NameIdentifierOO7 E
)OOE F
?OOF G
.OOG H
ValueOOH M
;OOM N
varRR 
userDataRR 
=RR 
_userServiceRR +
.RR+ ,
GetUserDataByIdRR, ;
(RR; <
userIdRR< B
)RRB C
;RRC D
ifTT 
(TT 
userDataTT 
!=TT 
nullTT  $
)TT$ %
{UU 
returnVV 
OkVV 
(VV 
userDataVV &
)VV& '
;VV' (
}WW 
elseXX 
{YY 
returnZZ 
NotFoundZZ #
(ZZ# $
$strZZ$ 9
)ZZ9 :
;ZZ: ;
}[[ 
}\\ 
catch]] 
(]] 
	Exception]] 
ex]] 
)]]  
{^^ 
return__ 

BadRequest__ !
(__! "
$"__" $
$str__$ 9
{__9 :
ex__: <
.__< =
Message__= D
}__D E
"__E F
)__F G
;__G H
}`` 
}aa 	
[cc 	
HttpPutcc	 
]cc 
[dd 	
	Authorizedd	 
]dd 
publicee 
IActionResultee 
UpdateUserDataee +
(ee+ ,
[ee, -
FromBodyee- 5
]ee5 6
UserDataModelee7 D
modeleeE J
)eeJ K
{ff 	
vargg 
userIdgg 
=gg 
Usergg 
.gg 
	FindFirstgg '
(gg' (

ClaimTypesgg( 2
.gg2 3
NameIdentifiergg3 A
)ggA B
?ggB C
.ggC D
ValueggD I
;ggI J
ifii 
(ii 
userIdii 
!=ii 
nullii 
)ii 
{jj 
trykk 
{ll 
_userServicemm  
.mm  !
UpdateUserDatamm! /
(mm/ 0
userIdmm0 6
,mm6 7
modelmm8 =
.mm= >
namemm> B
,mmB C
modelmmD I
.mmI J
emailmmJ O
)mmO P
;mmP Q
returnnn 
Oknn 
(nn 
$strnn >
)nn> ?
;nn? @
}oo 
catchpp 
(pp 
	Exceptionpp  
expp! #
)pp# $
{qq 
returnrr 

BadRequestrr %
(rr% &
$"rr& (
$strrr( D
{rrD E
exrrE G
.rrG H
MessagerrH O
}rrO P
"rrP Q
)rrQ R
;rrR S
}ss 
}tt 
elseuu 
{vv 
returnww 
Unauthorizedww #
(ww# $
)ww$ %
;ww% &
}xx 
}yy 	
[{{ 	

HttpDelete{{	 
]{{ 
[|| 	
	Authorize||	 
]|| 
public}} 
IActionResult}} 

DeleteUser}} '
(}}' (
)}}( )
{~~ 	
var 
userId 
= 
User 
. 
	FindFirst '
(' (

ClaimTypes( 2
.2 3
NameIdentifier3 A
)A B
?B C
.C D
ValueD I
;I J
if
ÅÅ 
(
ÅÅ 
userId
ÅÅ 
!=
ÅÅ 
null
ÅÅ 
)
ÅÅ 
{
ÇÇ 
try
ÉÉ 
{
ÑÑ 
_userService
ÖÖ  
.
ÖÖ  !

DeleteUser
ÖÖ! +
(
ÖÖ+ ,
userId
ÖÖ, 2
)
ÖÖ2 3
;
ÖÖ3 4
return
ÜÜ 
Ok
ÜÜ 
(
ÜÜ 
$str
ÜÜ A
)
ÜÜA B
;
ÜÜB C
}
áá 
catch
àà 
(
àà 
	Exception
àà  
ex
àà! #
)
àà# $
{
ââ 
return
ää 

BadRequest
ää %
(
ää% &
$"
ää& (
$str
ää( G
{
ääG H
ex
ääH J
.
ääJ K
Message
ääK R
}
ääR S
"
ääS T
)
ääT U
;
ääU V
}
ãã 
}
åå 
else
çç 
{
éé 
return
èè 
Unauthorized
èè #
(
èè# $
)
èè$ %
;
èè% &
}
êê 
}
ëë 	
}
íí 
}ìì ˙
\/Users/artemivliev/Artem/Cryptrade/CryptradeBack/UserManagement/Data/ApplicationDbContext.cs
	namespace 	
UserManagement
 
. 
Data 
{ 
public		 
class		  
ApplicationDbContext		 "
:		# $
	DbContext		% .
{

 
public  
ApplicationDbContext	 
( 
DbContextOptions .
<. / 
ApplicationDbContext/ C
>C D
optionsE L
)L M
:M N
baseO S
(T U
optionsU \
)\ ]
{ 
try 
{ 
var 
databaseCreator 
= 
Database "
." #

GetService# -
<- .
IDatabaseCreator. >
>> ?
(? @
)@ A
asB D%
RelationalDatabaseCreatorE ^
;^ _
if 
( 
databaseCreator 
!= 
null 
)  
{ 
if 
( 	
!	 

databaseCreator
 
. 

CanConnect $
($ %
)% &
)& '
databaseCreator( 7
.7 8
Create8 >
(> ?
)? @
;@ A
if 
( 	
!	 

databaseCreator
 
. 
	HasTables #
(# $
)$ %
)% &
databaseCreator' 6
.6 7
CreateTables7 C
(C D
)D E
;E F
} 
} 
catch 
(	 

	Exception
 
ex 
) 
{ 
throw 	
new
 
	Exception 
( 
ex 
. 
ToString #
(# $
)$ %
)% &
;& '
} 
} 
public 
DbSet	 
< 
User 
> 
Users 
{ 
get  
;  !
set" %
;% &
}' (
} 
} á
N/Users/artemivliev/Artem/Cryptrade/CryptradeBack/UserManagement/Entity/User.cs
	namespace 	
UserManagement
 
. 
Entity 
{ 
[ 
Table 

(
 
$str 
) 
] 
public 
class 
User 
{		 
[

 	
Key

	 
]

 
[ 	
Column	 
( 
$str 
) 
] 
public 
int	 
id 
{ 
get 
; 
set 
; 
} 
[ 	
Column	 
( 
$str 
) 
] 
public 
string 
name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Column	 
( 
$str 
) 
] 
public 
string 
email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Column	 
( 
$str 
) 
] 
public 
string 
password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Column	 
( 
$str 
) 
] 
public 
string 
role 
{ 
get  
;  !
set" %
;% &
}' (
} 
} Ü 
j/Users/artemivliev/Artem/Cryptrade/CryptradeBack/UserManagement/Migrations/20231022153643_InitialCreate.cs
	namespace 	
UserManagement
 
. 

Migrations #
{ 
public		 

partial		 
class		 
InitialCreate		 &
:		' (
	Migration		) 2
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
AlterDatabase *
(* +
)+ ,
. 

Annotation 
( 
$str +
,+ ,
$str- 6
)6 7
;7 8
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ C
,C D(
MySqlValueGenerationStrategyE a
.a b
IdentityColumnb p
)p q
,q r
name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 @
,@ A
nullableB J
:J K
falseL Q
)Q R
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 A
,A B
nullableC K
:K L
falseM R
)R S
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
password 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: D
,D E
nullableF N
:N O
falseP U
)U V
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
role 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 @
,@ A
nullableB J
:J K
falseL Q
)Q R
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
} 
, 
constraints   
:   
table   "
=>  # %
{!! 
table"" 
."" 

PrimaryKey"" $
(""$ %
$str""% /
,""/ 0
x""1 2
=>""3 5
x""6 7
.""7 8
id""8 :
)"": ;
;""; <
}## 
)## 
.$$ 

Annotation$$ 
($$ 
$str$$ +
,$$+ ,
$str$$- 6
)$$6 7
;$$7 8
}%% 	
	protected(( 
override(( 
void(( 
Down((  $
((($ %
MigrationBuilder((% 5
migrationBuilder((6 F
)((F G
{)) 	
migrationBuilder** 
.** 
	DropTable** &
(**& '
name++ 
:++ 
$str++ 
)++ 
;++ 
},, 	
}-- 
}.. ‰
W/Users/artemivliev/Artem/Cryptrade/CryptradeBack/UserManagement/Models/UserDataModel.cs
	namespace 	
UserManagement
 
. 
Models 
{ 
public 
class 
UserDataModel 
{ 
[ 	
Required	 
] 
public		 
string		 
name		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
[ 	
Required	 
] 
[ 	
DataType	 
( 
DataType 
. 
EmailAddress '
)' (
]( )
public 
string 
email 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
id 
{ 
get 
; 
set  
;  !
}" #
} 
} ‰
X/Users/artemivliev/Artem/Cryptrade/CryptradeBack/UserManagement/Models/UserLoginModel.cs
	namespace 	
UserManagement
 
. 
Models 
{ 
public 
class 
UserLoginModel 
{ 
[ 	
Required	 
] 
[		 	
DataType			 
(		 
DataType		 
.		 
EmailAddress		 '
)		' (
]		( )
public

 
string

 
email

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
[ 	
Required	 
] 
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ±
[/Users/artemivliev/Artem/Cryptrade/CryptradeBack/UserManagement/Models/UserRegisterModel.cs
	namespace 	
UserManagement
 
. 
Models 
{ 
public 

class 
UserRegisterModel "
{ 
[ 	
Required	 
] 
[		 	
StringLength			 
(		 
$num		 
,		 
MinimumLength		 '
=		( )
$num		* +
,		+ ,
ErrorMessage		- 9
=		: ;
$str		< p
)		p q
]		q r
public

 
string

 
name

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
[ 	
Required	 
] 
[ 	
DataType	 
( 
DataType 
. 
EmailAddress '
)' (
]( )
[ 	
StringLength	 
( 
$num 
, 
MinimumLength '
=( )
$num* +
,+ ,
ErrorMessage- 9
=: ;
$str< q
)q r
]r s
public 
string 
email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
, 
MinimumLength '
=( )
$num* +
,+ ,
ErrorMessage- 9
=: ;
$str< t
)t u
]u v
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
[ 	
Compare	 
( 
$str 
, 
ErrorMessage )
=* +
$str, D
)D E
]E F
public 
string 
confirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} —+
J/Users/artemivliev/Artem/Cryptrade/CryptradeBack/UserManagement/Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder

 
.

 
Services

 
.

 
	AddScoped

 
<

 
UserService

 &
>

& '
(

' (
)

( )
;

) *
builder 
. 
Services 
. 
	AddScoped 
< 
JwtTokenHandler *
>* +
(+ ,
), -
;- .
builder 
. 
Services 
. 
AddHttpClient 
( 
)  
;  !
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. "
AddHttpContextAccessor '
(' (
)( )
;) *
builder 
. 
Services 
. &
AddCustomJwtAuthentication +
(+ ,
), -
;- .
var 
dbHost 

= 
Environment 
. "
GetEnvironmentVariable /
(/ 0
$str0 9
)9 :
;: ;
var 
dbName 

= 
Environment 
. "
GetEnvironmentVariable /
(/ 0
$str0 9
)9 :
;: ;
var 

dbPassword 
= 
Environment 
. "
GetEnvironmentVariable 3
(3 4
$str4 F
)F G
;G H
var 
connectionString 
= 
$" 
$str  
{  !
dbHost! '
}' (
$str( <
{< =
dbName= C
}C D
$strD X
{X Y

dbPasswordY c
}c d
"d e
;e f
builder 
. 
Services 
. 
AddDbContext 
<  
ApplicationDbContext 2
>2 3
(3 4
options4 ;
=>< >
options 
. 
UseMySql 
( 
connectionString %
,% &
new' *
MySqlServerVersion, >
(> ?
new? B
VersionC J
(J K
$numK L
,L M
$numN O
,O P
$numQ R
)R S
)S T
)T U
)U V
;V W
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
builder!! 
.!! 
Services!! 
.!! 
AddCors!! 
(!! 
options!!  
=>!!! #
{"" 
options## 
.## 
	AddPolicy## 
(## 
$str## *
,##* +
builder$$ 
=>$$ 
builder$$ 
.%% 
WithOrigins%% 
(%% 
$str%% 0
)%%0 1
.&& 
AllowAnyHeader&& 
(&& 
)&& 
.'' 
AllowAnyMethod'' 
('' 
)'' 
)'' 
;'' 
}(( 
)(( 
;(( 
builder** 
.** 
Services** 
.** 
AddCors** 
(** 
options**  
=>**! #
{++ 
options,, 
.,, 
	AddPolicy,, 
(,, 
$str,, *
,,,* +
builder-- 
=>-- 
builder-- 
... 
WithOrigins.. 
(.. 
$str.. 0
)..0 1
.// 
AllowAnyHeader// 
(// 
)// 
.00 
AllowAnyMethod00 
(00 
)00 
)00 
;00 
}11 
)11 
;11 
var33 
app33 
=33 	
builder33
 
.33 
Build33 
(33 
)33 
;33 
app66 
.66 
UseCors66 
(66 
$str66  
)66  !
;66! "
app77 
.77 
UseCors77 
(77 
$str77  
)77  !
;77! "
if:: 
(:: 
app:: 
.:: 
Environment:: 
.:: 
IsDevelopment:: !
(::! "
)::" #
)::# $
{;; 
app<< 
.<< 

UseSwagger<< 
(<< 
)<< 
;<< 
app== 
.== 
UseSwaggerUI== 
(== 
)== 
;== 
}>> 
appAA 
.AA 
UseAuthenticationAA 
(AA 
)AA 
;AA 
appBB 
.BB 
UseAuthorizationBB 
(BB 
)BB 
;BB 
appDD 
.DD 
UseHttpsRedirectionDD 
(DD 
)DD 
;DD 
appEE 
.EE 
MapControllersEE 
(EE 
)EE 
;EE 
appGG 
.GG 
RunGG 
(GG 
)GG 	
;GG	 
´3
W/Users/artemivliev/Artem/Cryptrade/CryptradeBack/UserManagement/Services/UserService.cs
	namespace 	
UserManagement
 
. 
Services !
{ 
public 
class 
UserService 
{		 
private

 	
readonly


  
ApplicationDbContext

 '
_context

( 0
;

0 1
public 
UserService 
(  
ApplicationDbContext /
context0 7
)7 8
{ 
_context 
= 
context 
; 
} 
public 
void	 
RegisterUser 
( 
UserRegisterModel ,
model- 2
)2 3
{ 
if 
( 
_context 
. 
Users 
. 
Any 
( 
u 
=> 
u  
.  !
email! &
==' )
model* /
./ 0
email0 5
)5 6
)6 7
{ 
throw 	
new
 
	Exception 
( 
$str 2
)2 3
;3 4
} 
string 
hashedPassword !
=" #
BCrypt$ *
.* +
Net+ .
.. /
BCrypt/ 5
.5 6
HashPassword6 B
(B C
modelC H
.H I
passwordI Q
)Q R
;R S
var 
newUser 
= 
new 
User 
{ 
name 
=	 

model 
. 
name 
, 
email 	
=
 
model 
. 
email 
, 
password 
= 
hashedPassword 
, 
role 
=	 

$str 
}   
;   
_context"" 
."" 
Users"" 
."" 
Add"" 
("" 
newUser"" 
)"" 
;"" 
_context## 
.## 
SaveChanges## 
(## 
)## 
;## 
}$$ 	
public&& 
async&& 
Task&& 
<&& 
List&& 
<&& 
User&& #
>&&# $
>&&$ %
GetAllUsersAsync&&& 6
(&&6 7
)&&7 8
{'' 	
var(( 
listOfUsers(( 
=(( 
await(( #
_context(($ ,
.((, -
Users((- 2
.((2 3
ToListAsync((3 >
(((> ?
)((? @
;((@ A
return)) 
listOfUsers)) 
;)) 
}** 	
public,, 
UserDataModel,, 
GetUserDataById,, ,
(,,, -
string,,- 3
userId,,4 :
),,: ;
{-- 	
var// 
user// 
=// 
_context// 
.//  
Users//  %
.//% &
FirstOrDefault//& 4
(//4 5
u//5 6
=>//7 9
u//: ;
.//; <
id//< >
==//? A
Convert//B I
.//I J
ToInt32//J Q
(//Q R
userId//R X
)//X Y
)//Y Z
;//Z [
if11 
(11 
user11 
!=11 
null11 
)11 
{22 
var33 
userData33 
=33 
new33 "
UserDataModel33# 0
{44 
name55 
=55 
user55 
.55  
name55  $
,55$ %
email66 
=66 
user66  
.66  !
email66! &
,66& '
id77 
=77 
user77 
.77 
id77  
}88 
;88 
return:: 
userData:: 
;::  
};; 
return<< 
null<< 
;<< 
}== 	
public?? 
void?? 
UpdateUserData?? "
(??" #
string??# )
userId??* 0
,??0 1
string??2 8
newName??9 @
,??@ A
string??B H
newEmail??I Q
)??Q R
{@@ 	
varAA 
userAA 
=AA 
_contextAA 
.AA  
UsersAA  %
.AA% &
FindAA& *
(AA* +
ConvertAA+ 2
.AA2 3
ToInt32AA3 :
(AA: ;
userIdAA; A
)AAA B
)AAB C
;AAC D
ifCC 
(CC 
userCC 
!=CC 
nullCC 
)CC 
{DD 
ifEE 
(EE 
_contextEE 
.EE 
UsersEE "
.EE" #
AnyEE# &
(EE& '
uEE' (
=>EE) +
uEE, -
.EE- .
emailEE. 3
==EE4 6
newEmailEE7 ?
&&EE@ B
uEEC D
.EED E
idEEE G
!=EEH J
ConvertEEK R
.EER S
ToInt32EES Z
(EEZ [
userIdEE[ a
)EEa b
)EEb c
)EEc d
{FF 
throwGG 
newGG 
	ExceptionGG '
(GG' (
$strGG( B
)GGB C
;GGC D
}HH 
elseII 
{JJ 
userKK 
.KK 
nameKK 
=KK 
newNameKK  '
;KK' (
userLL 
.LL 
emailLL 
=LL  
newEmailLL! )
;LL) *
_contextMM 
.MM 
SaveChangesMM (
(MM( )
)MM) *
;MM* +
}NN 
}OO 
}PP 	
publicRR 
voidRR 

DeleteUserRR 
(RR 
stringRR %
userIdRR& ,
)RR, -
{SS 	
varTT 
userTT 
=TT 
_contextTT 
.TT  
UsersTT  %
.TT% &
FindTT& *
(TT* +
ConvertTT+ 2
.TT2 3
ToInt32TT3 :
(TT: ;
userIdTT; A
)TTA B
)TTB C
;TTC D
ifVV 
(VV 
userVV 
!=VV 
nullVV 
)VV 
{WW 
_contextXX 
.XX 
UsersXX 
.XX 
RemoveXX %
(XX% &
userXX& *
)XX* +
;XX+ ,
_contextYY 
.YY 
SaveChangesYY $
(YY$ %
)YY% &
;YY& '
}ZZ 
}[[ 	
}\\ 
}]] ®
X/Users/artemivliev/Artem/Cryptrade/CryptradeBack/UserManagement/Utility/SecurityUtils.cs
	namespace 	
UserManagement
 
. 
Utility  
{ 
public 
static 
class 
SecurityUtils "
{ 
public 
static	 
string 
GenerateSecurityKey *
(* +
int+ .
	keyLength/ 8
)8 9
{ 
const 
string 

validChars #
=$ %
$str& f
;f g
var		 
random		 
=		 
new		 
Random		 
(		 
)		 
;		 
var

 
chars

 
=

 
new

 
char

 
[

 
	keyLength

 !
]

! "
;

" #
for 
( 
int 
i 
= 
$num 
; 
i 
< 
	keyLength  
;  !
i" #
++# %
)% &
{ 
chars 	
[	 

i
 
] 
= 

validChars 
[ 
random  
.  !
Next! %
(% &

validChars& 0
.0 1
Length1 7
)7 8
]8 9
;9 :
} 
return 	
new
 
string 
( 
chars 
) 
; 
} 	
} 
} 