name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.401

      - name: Build and Test Backend
        run: |
          cd CryptradeBack
          dotnet build
          dotnet test

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          cd cryptradefront
          npm install

      - name: Build and Test Frontend
        run: |
          cd cryptradefront
          npm run build
          # npm test

  sonarqube:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.401

      - name: Install dotnet-sonarscanner
        run: dotnet tool install --global dotnet-sonarscanner --version 6.0.0

      - name: Run SonarQube Analysis
        run: |
          cd CryptradeBack
          dotnet sonarscanner begin /k:"CryptradeBack" /d:sonar.host.url="http://localhost:9000"  /d:sonar.login="sqp_1bb405a02f6f84ec98ee7f2cea887913636b5cec"          dotnet build
          dotnet build
          dotnet sonarscanner end /d:sonar.login="sqp_1bb405a02f6f84ec98ee7f2cea887913636b5cec"
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Docker Compose
        uses: docker/compose-cli@v1.0.0
        with:
          version: '1.29.2'

      - name: Build and Deploy
        run: |
          docker-compose down
          docker-compose build
          docker-compose up -d
